snippet imp "import"
	import ${2:name} from '${1:module}';

snippet dest "destructuring"
	const { ${2:prop} } = ${1:object};

snippet fun function
	function ${1:name}(${2:args}): ${3:void} {
		${0:// body...}
	}

snippet ano "anonymous function"
	(${1:args}): ${2:void} => ${3:/* body */}

snippet int "interface"
	interface ${1:Name} {
		${2}: ${3:never};
		${0}
	}

snippet inte "interface extends"
	interface ${1:Name} extends ${2:Base}
		${3}: ${4:never};
		${0}
	}

snippet intp "interface property"
	${1:property}: ${2:never};

snippet intm "interface method"
	${1:method}(${2:args}): ${3:never};

snippet intc "interface constructor"
	new(${1:args}): ${2:never};

snippet inti "interface index"
	[${1:index}]: ${2:never};

snippet cla "ts class"
	class ${1} {
		constructor(${2}) {
			${0}
		}
	}
snippet clae "ts class extends"
	class ${1} extends ${2} {
		constructor() {
			${0}
		}
	}

snippet pub "public method"
	public ${1:method}(${2:args}): ${3:never} {
		${0:// body...}
	}

snippet pri "private method"
	private ${1:method}(${2:args}): ${3:never} {
		${0:// body...}
	}

snippet pro "protected method"
	protected ${1:method}(${2:args}): ${3:never} {
		${0:// body...}
	}

snippet asy "async method"
	async ${1:method}(${2:args}): ${3:never} {
		${0:// body...}
	}

snippet sta "static method"
	static ${1:method}(${2:args}): ${3:never} {
		${0:// body...}
	}

snippet get "getter"
	get ${1:property}(): ${2:never} {
		${0:// body...}
	}

snippet set "setter"
	set ${1:property}(${2:value}): ${3:void} {
		${0:// body...}
	}
